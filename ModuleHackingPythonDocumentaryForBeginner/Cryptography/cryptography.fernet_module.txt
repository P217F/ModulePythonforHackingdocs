Help on module cryptography.fernet in cryptography:

NAME
    cryptography.fernet

DESCRIPTION
    # This file is dual licensed under the terms of the Apache License, Version
    # 2.0, and the BSD License. See the LICENSE file in the root of this repository
    # for complete details.

CLASSES
    builtins.Exception(builtins.BaseException)
        InvalidToken
    builtins.object
        Fernet
        MultiFernet
        cryptography.hazmat.bindings._rust.openssl.hmac.HMAC

    class Fernet(builtins.object)
     |  Fernet(key: 'bytes | str', backend: 'typing.Any' = None) -> 'None'
     |
     |  Methods defined here:
     |
     |  __init__(self, key: 'bytes | str', backend: 'typing.Any' = None) -> 'None'
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  decrypt(self, token: 'bytes | str', ttl: 'int | None' = None) -> 'bytes'
     |
     |  decrypt_at_time(self, token: 'bytes | str', ttl: 'int', current_time: 'int') -> 'bytes'
     |
     |  encrypt(self, data: 'bytes') -> 'bytes'
     |
     |  encrypt_at_time(self, data: 'bytes', current_time: 'int') -> 'bytes'
     |
     |  extract_timestamp(self, token: 'bytes | str') -> 'int'
     |
     |  ----------------------------------------------------------------------
     |  Class methods defined here:
     |
     |  generate_key() -> 'bytes'
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |
     |  __dict__
     |      dictionary for instance variables
     |
     |  __weakref__
     |      list of weak references to the object

    class HMAC(builtins.object)
     |  HMAC(key, algorithm, backend=None)
     |
     |  Methods defined here:
     |
     |  copy(self, /)
     |
     |  finalize(self, /)
     |
     |  update(self, /, data)
     |
     |  verify(self, /, signature)
     |
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |
     |  __new__(*args, **kwargs)
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |
     |  algorithm

    class InvalidToken(builtins.Exception)
     |  Method resolution order:
     |      InvalidToken
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Data descriptors defined here:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |
     |  __new__(*args, **kwargs) class method of builtins.Exception
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __repr__(self, /)
     |      Return repr(self).
     |
     |  __setstate__(...)
     |
     |  __str__(self, /)
     |      Return str(self).
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

    class MultiFernet(builtins.object)
     |  MultiFernet(fernets: 'typing.Iterable[Fernet]')
     |
     |  Methods defined here:
     |
     |  __init__(self, fernets: 'typing.Iterable[Fernet]')
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  decrypt(self, msg: 'bytes | str', ttl: 'int | None' = None) -> 'bytes'
     |
     |  decrypt_at_time(self, msg: 'bytes | str', ttl: 'int', current_time: 'int') -> 'bytes'
     |
     |  encrypt(self, msg: 'bytes') -> 'bytes'
     |
     |  encrypt_at_time(self, msg: 'bytes', current_time: 'int') -> 'bytes'
     |
     |  extract_timestamp(self, msg: 'bytes | str') -> 'int'
     |
     |  rotate(self, msg: 'bytes | str') -> 'bytes'
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |
     |  __dict__
     |      dictionary for instance variables
     |
     |  __weakref__
     |      list of weak references to the object

FILE
    /data/data/com.termux/files/usr/lib/python3.12/site-packages/cryptography/fernet.py


