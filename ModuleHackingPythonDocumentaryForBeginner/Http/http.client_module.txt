Help on module http.client in http:

NAME
    http.client - HTTP/1.1 client library

MODULE REFERENCE
    https://docs.python.org/3.12/library/http.client.html

    The following documentation is automatically generated from the Python
    source files.  It may be incomplete, incorrect or include features that
    are considered implementation detail and may vary between Python
    implementations.  When in doubt, consult the module reference at the
    location listed above.

DESCRIPTION
    <intro stuff goes here>
    <other stuff, too>

    HTTPConnection goes through a number of "states", which define when a client
    may legally make another request or fetch the response for a particular
    request. This diagram details these state transitions:

        (null)
          |
          | HTTPConnection()
          v
        Idle
          |
          | putrequest()
          v
        Request-started
          |
          | ( putheader() )*  endheaders()
          v
        Request-sent
          |\_____________________________
          |                              | getresponse() raises
          | response = getresponse()     | ConnectionError
          v                              v
        Unread-response                Idle
        [Response-headers-read]
          |\____________________
          |                     |
          | response.read()     | putrequest()
          v                     v
        Idle                  Req-started-unread-response
                         ______/|
                       /        |
       response.read() |        | ( putheader() )*  endheaders()
                       v        v
           Request-started    Req-sent-unread-response
                                |
                                | response.read()
                                v
                              Request-sent

    This diagram presents the following rules:
      -- a second request may not be started until {response-headers-read}
      -- a response [object] cannot be retrieved until {request-sent}
      -- there is no differentiation between an unread response body and a
         partially read response body

    Note: this enforcement is applied by the HTTPConnection class. The
          HTTPResponse class does not enforce this state machine, which
          implies sophisticated clients may accelerate the request/response
          pipeline. Caution should be taken, though: accelerating the states
          beyond the above pattern may imply knowledge of the server's
          connection-close behavior for certain requests. For example, it
          is impossible to tell whether the server will close the connection
          UNTIL the response headers have been read; this means that further
          requests cannot be placed into the pipeline until it is known that
          the server will NOT be closing the connection.

    Logical State                  __state            __response
    -------------                  -------            ----------
    Idle                           _CS_IDLE           None
    Request-started                _CS_REQ_STARTED    None
    Request-sent                   _CS_REQ_SENT       None
    Unread-response                _CS_IDLE           <response_class>
    Req-started-unread-response    _CS_REQ_STARTED    <response_class>
    Req-sent-unread-response       _CS_REQ_SENT       <response_class>

CLASSES
    builtins.ConnectionResetError(builtins.ConnectionError)
        RemoteDisconnected(builtins.ConnectionResetError, BadStatusLine)
    builtins.Exception(builtins.BaseException)
        HTTPException
            BadStatusLine
                RemoteDisconnected(builtins.ConnectionResetError, BadStatusLine)
            ImproperConnectionState
                CannotSendHeader
                CannotSendRequest
                ResponseNotReady
            IncompleteRead
            InvalidURL
            LineTooLong
            NotConnected
            UnimplementedFileMode
            UnknownProtocol
            UnknownTransferEncoding
    builtins.object
        HTTPConnection
            HTTPSConnection
    io.BufferedIOBase(_io._BufferedIOBase, io.IOBase)
        HTTPResponse

    class BadStatusLine(HTTPException)
     |  BadStatusLine(line)
     |
     |  Method resolution order:
     |      BadStatusLine
     |      HTTPException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Methods defined here:
     |
     |  __init__(self, line)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |
     |  __new__(*args, **kwargs) class method of builtins.Exception
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __repr__(self, /)
     |      Return repr(self).
     |
     |  __setstate__(...)
     |
     |  __str__(self, /)
     |      Return str(self).
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

    class CannotSendHeader(ImproperConnectionState)
     |  Method resolution order:
     |      CannotSendHeader
     |      ImproperConnectionState
     |      HTTPException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Data descriptors inherited from HTTPException:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |
     |  __new__(*args, **kwargs) class method of builtins.Exception
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __repr__(self, /)
     |      Return repr(self).
     |
     |  __setstate__(...)
     |
     |  __str__(self, /)
     |      Return str(self).
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

    class CannotSendRequest(ImproperConnectionState)
     |  Method resolution order:
     |      CannotSendRequest
     |      ImproperConnectionState
     |      HTTPException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Data descriptors inherited from HTTPException:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |
     |  __new__(*args, **kwargs) class method of builtins.Exception
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __repr__(self, /)
     |      Return repr(self).
     |
     |  __setstate__(...)
     |
     |  __str__(self, /)
     |      Return str(self).
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

    class HTTPConnection(builtins.object)
     |  HTTPConnection(host, port=None, timeout=<object object at 0xef0a41a8>, source_address=None, blocksize=8192)
     |
     |  Methods defined here:
     |
     |  __init__(self, host, port=None, timeout=<object object at 0xef0a41a8>, source_address=None, blocksize=8192)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  close(self)
     |      Close the connection to the HTTP server.
     |
     |  connect(self)
     |      Connect to the host and port specified in __init__.
     |
     |  endheaders(self, message_body=None, *, encode_chunked=False)
     |      Indicate that the last header line has been sent to the server.
     |
     |      This method sends the request to the server.  The optional message_body
     |      argument can be used to pass a message body associated with the
     |      request.
     |
     |  get_proxy_response_headers(self)
     |      Returns a dictionary with the headers of the response
     |      received from the proxy server to the CONNECT request
     |      sent to set the tunnel.
     |
     |      If the CONNECT request was not sent, the method returns None.
     |
     |  getresponse(self)
     |      Get the response from the server.
     |
     |      If the HTTPConnection is in the correct state, returns an
     |      instance of HTTPResponse or of whatever object is returned by
     |      the response_class variable.
     |
     |      If a request has not been sent or if a previous response has
     |      not be handled, ResponseNotReady is raised.  If the HTTP
     |      response indicates that the connection should be closed, then
     |      it will be closed before the response is returned.  When the
     |      connection is closed, the underlying socket is closed.
     |
     |  putheader(self, header, *values)
     |      Send a request header line to the server.
     |
     |      For example: h.putheader('Accept', 'text/html')
     |
     |  putrequest(self, method, url, skip_host=False, skip_accept_encoding=False)
     |      Send a request to the server.
     |
     |      `method' specifies an HTTP request method, e.g. 'GET'.
     |      `url' specifies the object being requested, e.g. '/index.html'.
     |      `skip_host' if True does not add automatically a 'Host:' header
     |      `skip_accept_encoding' if True does not add automatically an
     |         'Accept-Encoding:' header
     |
     |  request(self, method, url, body=None, headers={}, *, encode_chunked=False)
     |      Send a complete request to the server.
     |
     |  send(self, data)
     |      Send `data' to the server.
     |      ``data`` can be a string object, a bytes object, an array object, a
     |      file-like object that supports a .read() method, or an iterable object.
     |
     |  set_debuglevel(self, level)
     |
     |  set_tunnel(self, host, port=None, headers=None)
     |      Set up host and port for HTTP CONNECT tunnelling.
     |
     |      In a connection that uses HTTP CONNECT tunnelling, the host passed to
     |      the constructor is used as a proxy server that relays all communication
     |      to the endpoint passed to `set_tunnel`. This done by sending an HTTP
     |      CONNECT request to the proxy server when the connection is established.
     |
     |      This method must be called before the HTTP connection has been
     |      established.
     |
     |      The headers argument should be a mapping of extra HTTP headers to send
     |      with the CONNECT request.
     |
     |      As HTTP/1.1 is used for HTTP CONNECT tunnelling request, as per the RFC
     |      (https://tools.ietf.org/html/rfc7231#section-4.3.6), a HTTP Host:
     |      header must be provided, matching the authority-form of the request
     |      target provided as the destination for the CONNECT request. If a
     |      HTTP Host: header is not provided via the headers argument, one
     |      is generated and transmitted automatically.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |
     |  __dict__
     |      dictionary for instance variables
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |
     |  auto_open = 1
     |
     |  debuglevel = 0
     |
     |  default_port = 80
     |
     |  response_class = <class 'http.client.HTTPResponse'>

    class HTTPException(builtins.Exception)
     |  Method resolution order:
     |      HTTPException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Data descriptors defined here:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |
     |  __new__(*args, **kwargs) class method of builtins.Exception
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __repr__(self, /)
     |      Return repr(self).
     |
     |  __setstate__(...)
     |
     |  __str__(self, /)
     |      Return str(self).
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

    class HTTPResponse(io.BufferedIOBase)
     |  HTTPResponse(sock, debuglevel=0, method=None, url=None)
     |
     |  Method resolution order:
     |      HTTPResponse
     |      io.BufferedIOBase
     |      _io._BufferedIOBase
     |      io.IOBase
     |      _io._IOBase
     |      builtins.object
     |
     |  Methods defined here:
     |
     |  __init__(self, sock, debuglevel=0, method=None, url=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  __iter__(self)
     |      Implement iter(self).
     |
     |  begin(self)
     |
     |  close(self)
     |      Flush and close the IO object.
     |
     |      This method has no effect if the file is already closed.
     |
     |  fileno(self)
     |      Return underlying file descriptor if one exists.
     |
     |      Raise OSError if the IO object does not use a file descriptor.
     |
     |  flush(self)
     |      Flush write buffers, if applicable.
     |
     |      This is not implemented for read-only and non-blocking streams.
     |
     |  getcode(self)
     |      Return the HTTP status code that was sent with the response,
     |      or None if the URL is not an HTTP URL.
     |
     |  getheader(self, name, default=None)
     |      Returns the value of the header matching *name*.
     |
     |      If there are multiple matching headers, the values are
     |      combined into a single string separated by commas and spaces.
     |
     |      If no matching header is found, returns *default* or None if
     |      the *default* is not specified.
     |
     |      If the headers are unknown, raises http.client.ResponseNotReady.
     |
     |  getheaders(self)
     |      Return list of (header, value) tuples.
     |
     |  geturl(self)
     |      Return the real URL of the page.
     |
     |      In some cases, the HTTP server redirects a client to another
     |      URL. The urlopen() function handles this transparently, but in
     |      some cases the caller needs to know which URL the client was
     |      redirected to. The geturl() method can be used to get at this
     |      redirected URL.
     |
     |  info(self)
     |      Returns an instance of the class mimetools.Message containing
     |      meta-information associated with the URL.
     |
     |      When the method is HTTP, these headers are those returned by
     |      the server at the head of the retrieved HTML page (including
     |      Content-Length and Content-Type).
     |
     |      When the method is FTP, a Content-Length header will be
     |      present if (as is now usual) the server passed back a file
     |      length in response to the FTP retrieval request. A
     |      Content-Type header will be present if the MIME type can be
     |      guessed.
     |
     |      When the method is local-file, returned headers will include
     |      a Date representing the file's last-modified time, a
     |      Content-Length giving file size, and a Content-Type
     |      containing a guess at the file's type. See also the
     |      description of the mimetools module.
     |
     |  isclosed(self)
     |      True if the connection is closed.
     |
     |  peek(self, n=-1)
     |
     |  read(self, amt=None)
     |      Read and return the response body, or up to the next amt bytes.
     |
     |  read1(self, n=-1)
     |      Read with at most one underlying system call.  If at least one
     |      byte is buffered, return that instead.
     |
     |  readable(self)
     |      Always returns True
     |
     |  readinto(self, b)
     |      Read up to len(b) bytes into bytearray b and return the number
     |      of bytes read.
     |
     |  readline(self, limit=-1)
     |      Read and return a line from the stream.
     |
     |      If size is specified, at most size bytes will be read.
     |
     |      The line terminator is always b'\n' for binary files; for text
     |      files, the newlines argument to open can be used to select the line
     |      terminator(s) recognized.
     |
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |
     |  __abstractmethods__ = frozenset()
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from _io._BufferedIOBase:
     |
     |  detach(self, /)
     |      Disconnect this buffer from its underlying raw stream and return it.
     |
     |      After the raw stream has been detached, the buffer is in an unusable
     |      state.
     |
     |  readinto1(self, buffer, /)
     |
     |  write(self, b, /)
     |      Write buffer b to the IO stream.
     |
     |      Return the number of bytes written, which is always
     |      the length of b in bytes.
     |
     |      Raise BlockingIOError if the buffer is full and the
     |      underlying raw stream cannot accept more data at the moment.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from _io._IOBase:
     |
     |  __del__(...)
     |
     |  __enter__(...)
     |
     |  __exit__(...)
     |
     |  __next__(self, /)
     |      Implement next(self).
     |
     |  isatty(self, /)
     |      Return whether this is an 'interactive' stream.
     |
     |      Return False if it can't be determined.
     |
     |  readlines(self, hint=-1, /)
     |      Return a list of lines from the stream.
     |
     |      hint can be specified to control the number of lines read: no more
     |      lines will be read if the total size (in bytes/characters) of all
     |      lines so far exceeds hint.
     |
     |  seek(self, offset, whence=0, /)
     |      Change the stream position to the given byte offset.
     |
     |        offset
     |          The stream position, relative to 'whence'.
     |        whence
     |          The relative position to seek from.
     |
     |      The offset is interpreted relative to the position indicated by whence.
     |      Values for whence are:
     |
     |      * os.SEEK_SET or 0 -- start of stream (the default); offset should be zero or positive
     |      * os.SEEK_CUR or 1 -- current stream position; offset may be negative
     |      * os.SEEK_END or 2 -- end of stream; offset is usually negative
     |
     |      Return the new absolute position.
     |
     |  seekable(self, /)
     |      Return whether object supports random access.
     |
     |      If False, seek(), tell() and truncate() will raise OSError.
     |      This method may need to do a test seek().
     |
     |  tell(self, /)
     |      Return current stream position.
     |
     |  truncate(self, size=None, /)
     |      Truncate file to size bytes.
     |
     |      File pointer is left unchanged. Size defaults to the current IO position
     |      as reported by tell(). Return the new size.
     |
     |  writable(self, /)
     |      Return whether object was opened for writing.
     |
     |      If False, write() will raise OSError.
     |
     |  writelines(self, lines, /)
     |      Write a list of lines to stream.
     |
     |      Line separators are not added, so it is usual for each of the
     |      lines provided to have a line separator at the end.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from _io._IOBase:
     |
     |  __dict__
     |
     |  closed

    class HTTPSConnection(HTTPConnection)
     |  HTTPSConnection(host, port=None, *, timeout=<object object at 0xef0a41a8>, source_address=None, context=None, blocksize=8192)
     |
     |  This class allows communication via SSL.
     |
     |  Method resolution order:
     |      HTTPSConnection
     |      HTTPConnection
     |      builtins.object
     |
     |  Methods defined here:
     |
     |  __init__(self, host, port=None, *, timeout=<object object at 0xef0a41a8>, source_address=None, context=None, blocksize=8192)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  connect(self)
     |      Connect to a host on a given (SSL) port.
     |
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |
     |  default_port = 443
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPConnection:
     |
     |  close(self)
     |      Close the connection to the HTTP server.
     |
     |  endheaders(self, message_body=None, *, encode_chunked=False)
     |      Indicate that the last header line has been sent to the server.
     |
     |      This method sends the request to the server.  The optional message_body
     |      argument can be used to pass a message body associated with the
     |      request.
     |
     |  get_proxy_response_headers(self)
     |      Returns a dictionary with the headers of the response
     |      received from the proxy server to the CONNECT request
     |      sent to set the tunnel.
     |
     |      If the CONNECT request was not sent, the method returns None.
     |
     |  getresponse(self)
     |      Get the response from the server.
     |
     |      If the HTTPConnection is in the correct state, returns an
     |      instance of HTTPResponse or of whatever object is returned by
     |      the response_class variable.
     |
     |      If a request has not been sent or if a previous response has
     |      not be handled, ResponseNotReady is raised.  If the HTTP
     |      response indicates that the connection should be closed, then
     |      it will be closed before the response is returned.  When the
     |      connection is closed, the underlying socket is closed.
     |
     |  putheader(self, header, *values)
     |      Send a request header line to the server.
     |
     |      For example: h.putheader('Accept', 'text/html')
     |
     |  putrequest(self, method, url, skip_host=False, skip_accept_encoding=False)
     |      Send a request to the server.
     |
     |      `method' specifies an HTTP request method, e.g. 'GET'.
     |      `url' specifies the object being requested, e.g. '/index.html'.
     |      `skip_host' if True does not add automatically a 'Host:' header
     |      `skip_accept_encoding' if True does not add automatically an
     |         'Accept-Encoding:' header
     |
     |  request(self, method, url, body=None, headers={}, *, encode_chunked=False)
     |      Send a complete request to the server.
     |
     |  send(self, data)
     |      Send `data' to the server.
     |      ``data`` can be a string object, a bytes object, an array object, a
     |      file-like object that supports a .read() method, or an iterable object.
     |
     |  set_debuglevel(self, level)
     |
     |  set_tunnel(self, host, port=None, headers=None)
     |      Set up host and port for HTTP CONNECT tunnelling.
     |
     |      In a connection that uses HTTP CONNECT tunnelling, the host passed to
     |      the constructor is used as a proxy server that relays all communication
     |      to the endpoint passed to `set_tunnel`. This done by sending an HTTP
     |      CONNECT request to the proxy server when the connection is established.
     |
     |      This method must be called before the HTTP connection has been
     |      established.
     |
     |      The headers argument should be a mapping of extra HTTP headers to send
     |      with the CONNECT request.
     |
     |      As HTTP/1.1 is used for HTTP CONNECT tunnelling request, as per the RFC
     |      (https://tools.ietf.org/html/rfc7231#section-4.3.6), a HTTP Host:
     |      header must be provided, matching the authority-form of the request
     |      target provided as the destination for the CONNECT request. If a
     |      HTTP Host: header is not provided via the headers argument, one
     |      is generated and transmitted automatically.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPConnection:
     |
     |  __dict__
     |      dictionary for instance variables
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPConnection:
     |
     |  auto_open = 1
     |
     |  debuglevel = 0
     |
     |  response_class = <class 'http.client.HTTPResponse'>

    class ImproperConnectionState(HTTPException)
     |  Method resolution order:
     |      ImproperConnectionState
     |      HTTPException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Data descriptors inherited from HTTPException:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |
     |  __new__(*args, **kwargs) class method of builtins.Exception
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __repr__(self, /)
     |      Return repr(self).
     |
     |  __setstate__(...)
     |
     |  __str__(self, /)
     |      Return str(self).
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

    class IncompleteRead(HTTPException)
     |  IncompleteRead(partial, expected=None)
     |
     |  Method resolution order:
     |      IncompleteRead
     |      HTTPException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Methods defined here:
     |
     |  __init__(self, partial, expected=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  __repr__(self)
     |      Return repr(self).
     |
     |  __str__(self, /) from builtins.object
     |      Return str(self).
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |
     |  __new__(*args, **kwargs) class method of builtins.Exception
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __setstate__(...)
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

    class InvalidURL(HTTPException)
     |  Method resolution order:
     |      InvalidURL
     |      HTTPException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Data descriptors inherited from HTTPException:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |
     |  __new__(*args, **kwargs) class method of builtins.Exception
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __repr__(self, /)
     |      Return repr(self).
     |
     |  __setstate__(...)
     |
     |  __str__(self, /)
     |      Return str(self).
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

    class LineTooLong(HTTPException)
     |  LineTooLong(line_type)
     |
     |  Method resolution order:
     |      LineTooLong
     |      HTTPException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Methods defined here:
     |
     |  __init__(self, line_type)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |
     |  __new__(*args, **kwargs) class method of builtins.Exception
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __repr__(self, /)
     |      Return repr(self).
     |
     |  __setstate__(...)
     |
     |  __str__(self, /)
     |      Return str(self).
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

    class NotConnected(HTTPException)
     |  Method resolution order:
     |      NotConnected
     |      HTTPException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Data descriptors inherited from HTTPException:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |
     |  __new__(*args, **kwargs) class method of builtins.Exception
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __repr__(self, /)
     |      Return repr(self).
     |
     |  __setstate__(...)
     |
     |  __str__(self, /)
     |      Return str(self).
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

    class RemoteDisconnected(builtins.ConnectionResetError, BadStatusLine)
     |  RemoteDisconnected(*pos, **kw)
     |
     |  Method resolution order:
     |      RemoteDisconnected
     |      builtins.ConnectionResetError
     |      builtins.ConnectionError
     |      builtins.OSError
     |      BadStatusLine
     |      HTTPException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Methods defined here:
     |
     |  __init__(self, *pos, **kw)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.OSError:
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __str__(self, /)
     |      Return str(self).
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.OSError:
     |
     |  __new__(*args, **kwargs) class method of builtins.OSError
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.OSError:
     |
     |  characters_written
     |
     |  errno
     |      POSIX exception code
     |
     |  filename
     |      exception filename
     |
     |  filename2
     |      second exception filename
     |
     |  strerror
     |      exception strerror
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __repr__(self, /)
     |      Return repr(self).
     |
     |  __setstate__(...)
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

    class ResponseNotReady(ImproperConnectionState)
     |  Method resolution order:
     |      ResponseNotReady
     |      ImproperConnectionState
     |      HTTPException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Data descriptors inherited from HTTPException:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |
     |  __new__(*args, **kwargs) class method of builtins.Exception
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __repr__(self, /)
     |      Return repr(self).
     |
     |  __setstate__(...)
     |
     |  __str__(self, /)
     |      Return str(self).
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

    class UnimplementedFileMode(HTTPException)
     |  Method resolution order:
     |      UnimplementedFileMode
     |      HTTPException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Data descriptors inherited from HTTPException:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |
     |  __new__(*args, **kwargs) class method of builtins.Exception
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __repr__(self, /)
     |      Return repr(self).
     |
     |  __setstate__(...)
     |
     |  __str__(self, /)
     |      Return str(self).
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

    class UnknownProtocol(HTTPException)
     |  UnknownProtocol(version)
     |
     |  Method resolution order:
     |      UnknownProtocol
     |      HTTPException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Methods defined here:
     |
     |  __init__(self, version)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |
     |  __new__(*args, **kwargs) class method of builtins.Exception
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __repr__(self, /)
     |      Return repr(self).
     |
     |  __setstate__(...)
     |
     |  __str__(self, /)
     |      Return str(self).
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

    class UnknownTransferEncoding(HTTPException)
     |  Method resolution order:
     |      UnknownTransferEncoding
     |      HTTPException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Data descriptors inherited from HTTPException:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |
     |  __new__(*args, **kwargs) class method of builtins.Exception
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __repr__(self, /)
     |      Return repr(self).
     |
     |  __setstate__(...)
     |
     |  __str__(self, /)
     |      Return str(self).
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

    error = class HTTPException(builtins.Exception)
     |  Method resolution order:
     |      HTTPException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |
     |  Data descriptors defined here:
     |
     |  __weakref__
     |      list of weak references to the object
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |
     |  __new__(*args, **kwargs) class method of builtins.Exception
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |
     |  __reduce__(...)
     |      Helper for pickle.
     |
     |  __repr__(self, /)
     |      Return repr(self).
     |
     |  __setstate__(...)
     |
     |  __str__(self, /)
     |      Return str(self).
     |
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |
     |  __cause__
     |      exception cause
     |
     |  __context__
     |      exception context
     |
     |  __dict__
     |
     |  __suppress_context__
     |
     |  __traceback__
     |
     |  args

DATA
    __all__ = ['HTTPResponse', 'HTTPConnection', 'HTTPException', 'NotConn...
    responses = {<HTTPStatus.CONTINUE: 100>: 'Continue', <HTTPStatus.SWITC...

FILE
    /data/data/com.termux/files/usr/lib/python3.12/http/client.py


